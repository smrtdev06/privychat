╔══════════════════════════════════════════════════════════════════════════╗
║                  PRIVYCALC ANDROID KEYSTORE CREDENTIALS                  ║
║                    ⚠️  KEEP THIS FILE SECURE AND PRIVATE ⚠️               ║
╚══════════════════════════════════════════════════════════════════════════╝

📁 KEYSTORE FILE LOCATION:
   android/privycalc-release.keystore

🔑 CREDENTIALS:
   Keystore Password:  PrivyCalc2025#Secure!
   Key Alias:          privycalc-key
   Key Password:       PrivyCalc2025#Secure!

📊 TECHNICAL DETAILS:
   Keystore Type:      PKCS12 (Modern Standard)
   Key Algorithm:      RSA
   Key Size:           4096-bit (Future-proof)
   Validity:           27 years (until March 11, 2053)
   
🔐 CERTIFICATE FINGERPRINTS:
   SHA1:   B6:B0:5E:4B:AA:E0:C2:4B:84:C2:68:24:C7:85:E0:96:8E:04:62:0B
   SHA256: 48:A8:B2:1B:4F:42:79:D6:57:10:9E:0A:4C:16:93:B7:9F:C0:8A:18:5F:02:94:3D:F3:05:51:B9:61:38:A2:7E

📋 CERTIFICATE SUBJECT:
   CN (Common Name):        PrivyCalc
   OU (Organizational Unit): Mobile Apps
   O  (Organization):        PrivyCalc
   L  (City):                San Francisco
   ST (State):               California
   C  (Country):             US

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📱 HOW TO USE FOR RELEASE BUILD:

1. Open Android Studio
2. Go to: Build → Generate Signed Bundle/APK
3. Choose: Android App Bundle or APK
4. Select existing keystore: android/privycalc-release.keystore
5. Enter credentials from above
6. Build release version

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

⚠️  IMPORTANT SECURITY NOTES:

✅ DO:
   • Back up this keystore file in multiple secure locations
   • Store passwords in a password manager (1Password, LastPass, etc.)
   • Enable Google Play App Signing (allows key recovery)
   • Keep this file private and never share publicly

❌ DON'T:
   • Commit keystore to public Git repositories
   • Share passwords via email or chat (use secure channels)
   • Lose this keystore (you won't be able to update your app!)
   • Store passwords in plain text in code

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🚀 GOOGLE PLAY CONSOLE SETUP:

When uploading your first APK/AAB to Google Play Console:

1. Google will ask you to enroll in Google Play App Signing
2. ✅ HIGHLY RECOMMENDED: Enable it! Benefits:
   • Google securely manages your app signing key
   • If you lose your upload key, Google can reset it
   • Enhanced security and key management
   
3. You'll use this keystore as your "upload key"
4. Google will generate a separate "app signing key" for production

SHA-256 Fingerprint needed for Google APIs/Firebase:
48:A8:B2:1B:4F:42:79:D6:57:10:9E:0A:4C:16:93:B7:9F:C0:8A:18:5F:02:94:3D:F3:05:51:B9:61:38:A2:7E

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Generated: October 24, 2025
Valid Until: March 11, 2053

╔══════════════════════════════════════════════════════════════════════════╗
║            🔒 STORE THIS FILE IN A SECURE, ENCRYPTED LOCATION 🔒         ║
╚══════════════════════════════════════════════════════════════════════════╝
